# User tmux configuration file.

# Set the default value of TERM so that colors work correctly when running Vim
# in tmux.
set-option -g default-terminal "tmux-256color"

# Change the default prefix key.
set-option -g prefix C-j
unbind-key C-b
bind-key C-j send-prefix


# Key bindings {{{
# Set key bindings similar to those of Vim's window commands (the CTRL-W
# prefix) for the corresponding behaviors.

# Select the next pane (default: C-b o).
bind-key w   select-pane -t:.+
bind-key C-w select-pane -t:.+
# Select the previous pane.
bind-key W   select-pane -t:.-

# Select the previous window (default: C-b p).
bind-key N previous-window

# Select the alternate (previously active) window (default: C-b l).
bind-key C-^ last-window
# Move to the previously active pane (default: C-b ;).
bind-key p   last-pane
bind-key C-p last-pane

# Select the pane to the left, below, above, or to the right of the active
# pane, respectively (defaults: C-b Up|Down|Left|Right).
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
# Move the current pane to be at the far left, very bottom, very top, or far
# right, respectively.
bind-key H join-pane -bh -s:. -t':.{left}'
bind-key J join-pane    -s:. -t':.{bottom}'
bind-key K join-pane -b -s:. -t':.{top}'
bind-key L join-pane -h -s:. -t':.{right}'

# Create a new window (default: C-b c).
bind-key e new-window

# Display pane numbers (default: C-b q).
bind-key u display-panes

# Make the active pane the only pane (default: C-b z). (Technically, this
# command hides all other panes, not closes them; they can be brought back into
# view by entering the command again.)
bind-key o   resize-pane -Z
bind-key C-o resize-pane -Z

# tmux refers to "horizontal" and "vertical" splits opposite to Vim. Although
# the subsequent commands are for tmux, this file uses these terms in
# accordance with Vim, i.e., left and right splits are "vertical", and above
# and below splits are "horizontal".
# Split window (default: C-b ").
bind-key s   split-window
bind-key C-s split-window
# Split window vertically (default: C-b %).
bind-key v   split-window -h
bind-key C-v split-window -h

# Spread panes out evenly (default: C-b E).
bind-key = select-layout -E

# Rotate through the panes (default: C-b o).
bind-key r   'rotate-window -D ; select-pane -D'
bind-key C-r 'rotate-window -D ; select-pane -D'
# Rotate through the panes in reverse (default: C-b M-o).
bind-key R   'rotate-window -U ; select-pane -U'

# Swap the active pane with the pane below (default: C-b }).
bind-key x   swap-pane -Dd
bind-key C-x swap-pane -Dd

# Select the top-left pane.
bind-key t   select-pane -t':.{top-left}'
bind-key C-t select-pane -t':.{top-left}'
# Select the bottom-right pane.
bind-key b   select-pane -t':.{bottom-right}'
bind-key C-b select-pane -t':.{bottom-right}'

# Kill the active pane (default: C-b x).
bind-key c confirm-before -p "kill-pane #P? (y/n)" kill-pane
## Kill the active window (default: C-b &).
#bind-key a confirm-before -p "kill-window #W? (y/n)" kill-pane
# Kill the active session.
bind-key q confirm-before -p "kill-session #S? (All windows in the session \
will also be killed!) (y/n)" kill-session
# }}}


# Status line {{{
# Title of pane between double quotes, followed by the abbreviated weekday
# name, the abbreviated month name, day of month, and finally the time (24-hour
# clock). For example,
#	"hostname" Thu Mar 24 09:09
set-option -g status-right '"#T" %a %b %d %H:%M'
set-option -g status-style 'fg=white,bg=brightgreen'
# }}}


# vim:fdm=marker
