*sum_usr_12.txt*	For Vim version 8.2	Last change: 2022 Jan 07

What I learned:

Prepend "\<" to a pattern to match it at the start of a word and append "\>"
to match it at the end of a word: >

	:%s/\<complete\>/word/g

This command replaces the word "complete" with "word".

Specify the "c" flag for ":substitute" to prompt each replacement. Use the "e"
flag to avoid an unfound match from being an error.

If an error occurs during a register's execution, the execution stops.


Specify the "\(" and "\)" delimiters in the "from" pattern of ":substitute" to
enable referencing of matched text: >

	:%s/\(^,\)\(.*\)/\1 \2/

Access the text in the "to" string with backreferences, each of which is a
count prepended with '\'; the count specifies which "\( \)" instance to
reference, with zero referencing the entire matched pattern. Up to nine
backreferences may be used.


The "^" regular expression matches the beginning of a line.


Enter >

	g CTRL-G

to get the numbers of words and characters in the current file. Use it in
Visual mode for such numbers in the selected area.


Press >

	K

to retrieve a man page for the word under the cursor, if possible.


One way to remove whitespace at the end of every line in the current file is >

	:%s/\s\+$//

The pattern here is "\s\+$": find whitespace characters (\s), one or more of
them (\+), before the end of the line ($).


Launch Vim to edit all C files that contain the word "frame_counter" with >

	vim `grep -l frame_counter *.c`

Find all occurrences of "frame_counter" in all C files with >

	:grep frame_counter *.c

Use >

	:cnext

to find the next matching line, >

	:cprev

for the previous matching line, and >

	:clist

for a list of all matches.


 vim:tw=78:isk=!-~,^*,^\|,^\":ts=8:noet:ft=help:norl:
