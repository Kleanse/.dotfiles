*sum_usr_32.txt*	For Vim version 8.2	Last change: 2022 Jan 07

What I learned:

Return to the text state last written for the current file with >

	:earlier 1f

where "f" means "file". Change the count to go back that many file writes.

To go forward instead, use >

	:later 1f


The undo tree is a tree that records the changes in a file, and each change is
associated with a number. Using the familiar "u" and CTRL-R commands traverses
up and down the undo tree's last used branch. The undo tree may have multiple
branches.

To jump to a specific change in the undo tree, use >

	:undo {N}

where {N} is that change's number.

Return to the change made before (not necessarily up the undo tree) with >

	g-

Go to a newer change with the inverse >

	g+

These last two commands are useful when a change number is unknown. Precede
them with a count to repeat them that many times.

View the branches of the undo tree with >

	:undolist

which displays something like the following information

	number changes  time ~
	     3       2  16 seconds ago
	     4       3  5 seconds ago

Each row in this table indicates a branch in the undo tree. The first column
identifies the leaf of a branch; the second shows the number of changes made
from the root of the tree to a branch's leaf; and the third is the time that
leaf change was last made.

Go back ten seconds in the undo tree with >

	:earlier 10s

This command also accepts "m" for minutes, "h" for hours, and "d" for days.
Use a big number to return to the tree's root, e.g., "100d".

Use the inverse command ":later" to travel forward in time: >

	:later 1m

To get more details of the undo tree, use the "undotree()" function: >

	:echo undotree()


 vim:tw=78:isk=!-~,^*,^\|,^\":ts=8:noet:ft=help:norl:
